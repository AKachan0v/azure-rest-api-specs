{
  "swagger": "2.0",
  "info": {
    "title": "Azure Schema Registry",
    "version": "0.1.9"
  },
  "paths": {
    "/$schemagroups/getSchemaById": {
      "get": {
        "summary": "Get schema by GUID",
        "description": "Get schema by GUID.  Azure Schema Registry guarantees that GUID within a namespace.",
        "operationId": "getSchemaById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "X-Serialization",
            "description": "schema type",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "X-Schema-Id",
            "description": "unique schema identifier",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "X-Schema-Id-Location",
            "description": "location of schema resource",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "X-Schema-Version",
            "description": "version of returned schema",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Schema with matching GUID not found"
          }
        },
        "tags": [
          "schemas",
          "client-runtime"
        ]
      }
    },
    "/$schemagroups/{group-name}/schemas": {
      "get": {
        "summary": "Get schemas for group name",
        "description": "Returns schema by group name.",
        "operationId": "getSchemasByGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "type": "string",
            "name": "group-name",
            "description": "schema group",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes all schemas in group",
        "description": "Deletes all schemas under specified group name.",
        "operationId": "deleteSchemasByGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "type": "string",
            "name": "group-name",
            "description": "schema group",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK no content"
          },
          "400": {
            "description": "Invalid group supplied"
          },
          "404": {
            "description": "Group not found"
          }
        }
      }
    },
    "/$schemagroups/{group-name}/schemas/{schema-name}": {
      "post": {
        "summary": "Get schema GUID by schema content",
        "description": "Get GUID for schema with matching byte content and serialization format.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              },
              "X-Serialization": {
                "type": "string",
                "description": "schema type"
              },
              "X-Schema-Id": {
                "type": "string",
                "description": "unique schema identifier"
              },
              "X-Schema-Id-Location": {
                "type": "string",
                "description": "location of schema resource"
              },
              "X-Schema-Version": {
                "type": "integer",
                "description": "version of returned schema"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "schema GUID"
                }
              }
            }
          },
          "404": {
            "description": "Matching schema not found"
          }
        },
        "tags": [
          "schemas",
          "client-runtime"
        ]
      },
      "put": {
        "summary": "Create new schema",
        "description": "Create new schema. If schema of specified name does not exist in specified group, schema is created at version 1. If schema of specified name exists already in specified group, schema is created at latest version + 1.\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              },
              "X-Serialization": {
                "type": "string",
                "description": "schema type"
              },
              "X-Schema-Id": {
                "type": "string",
                "description": "unique schema identifier"
              },
              "X-Schema-Id-Location": {
                "type": "string",
                "description": "location of schema resource"
              },
              "X-Schema-Version": {
                "type": "integer",
                "description": "version of returned schema"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "schema GUID"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        },
        "tags": [
          "schemas",
          "client-runtime"
        ]
      },
      "get": {
        "summary": "Get latest version of schema",
        "description": "Get latest version of schema.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              },
              "X-Serialization": {
                "type": "string",
                "description": "schema type"
              },
              "X-Schema-Id": {
                "type": "string",
                "description": "unique schema identifier"
              },
              "X-Schema-Id-Location": {
                "type": "string",
                "description": "location of schema resource"
              },
              "X-Schema-Version": {
                "type": "integer",
                "description": "version of returned schema"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "schema GUID"
                }
              }
            }
          }
        },
        "tags": [
          "schemas"
        ]
      },
      "delete": {
        "summary": "Delete schema",
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "OK no content"
          },
          "404": {
            "description": "Matching schema not found"
          }
        },
        "tags": [
          "schemas"
        ]
      }
    },
    "/$schemagroups/{group-name}/schemas/{schema-name}/versions": {
      "get": {
        "summary": "Get list of versions",
        "description": "Get list of versions for specified schema",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Serialization": {
                "type": "string",
                "description": "schema type"
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        },
        "tags": [
          "schemas"
        ]
      }
    },
    "/$schemagroups/{group-name}/schemas/{schema-name}/versions/{version-number}": {
      "get": {
        "summary": "Get specified version of schema",
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          },
          {
            "name": "version-number",
            "in": "path",
            "description": "version number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Location": {
                "type": "string"
              },
              "X-Serialization": {
                "type": "string",
                "description": "schema type"
              },
              "X-Schema-Id": {
                "type": "string",
                "description": "unique schema identifier"
              },
              "X-Schema-Id-Location": {
                "type": "string",
                "description": "location of schema resource"
              },
              "X-Schema-Version": {
                "type": "integer",
                "description": "version of returned schema"
              }
            },
            "schema": {
              "type": "object"
            }
          }
        },
        "tags": [
          "schemas"
        ]
      },
      "delete": {
        "summary": "Delete specified version of schema",
        "parameters": [
          {
            "name": "group-name",
            "in": "path",
            "description": "schema group",
            "required": true,
            "type": "string"
          },
          {
            "name": "schema-name",
            "in": "path",
            "description": "schema name",
            "required": true,
            "type": "string"
          },
          {
            "name": "version-number",
            "in": "path",
            "description": "version number",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "schemas"
        ]
      }
    }
  },
  "definitions": {
    "SchemaId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "SchemaBytePayload": {
      "type": "string"
    }
  },
  "responses": {
    "SchemaIdResponse": {
      "description": "OK",
      "headers": {
        "Location": {
          "type": "string"
        },
        "X-Serialization": {
          "type": "string",
          "description": "schema type"
        },
        "X-Schema-Id": {
          "type": "string",
          "description": "unique schema identifier"
        },
        "X-Schema-Id-Location": {
          "type": "string",
          "description": "location of schema resource"
        },
        "X-Schema-Version": {
          "type": "integer",
          "description": "version of returned schema"
        }
      },
      "schema": {
        "$ref": "#/definitions/SchemaId"
      }
    },
    "SchemaBytePayloadResponse": {
      "description": "OK",
      "headers": {
        "Location": {
          "type": "string"
        },
        "X-Serialization": {
          "type": "string",
          "description": "schema type"
        },
        "X-Schema-Id": {
          "type": "string",
          "description": "unique schema identifier"
        },
        "X-Schema-Id-Location": {
          "type": "string",
          "description": "location of schema resource"
        },
        "X-Schema-Version": {
          "type": "integer",
          "description": "version of returned schema"
        }
      },
      "schema": {
        "$ref": "#/definitions/SchemaBytePayload"
      }
    }
  }
}
